{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cart = [];\n    this.products = new BehaviorSubject([]);\n    this.totalAmount = new BehaviorSubject(0);\n    this.gstAmount = new BehaviorSubject(0);\n    this.estimatedTotal = new BehaviorSubject(0);\n  }\n  get getCart() {\n    return this.cart;\n  }\n  add(product) {\n    this.cart.push(product);\n    this.updateQtyAndTotalPrice(product);\n    this.products.next(this.cart);\n  }\n  remove(product) {\n    this.cart.map((prod, index) => {\n      if (product.id === prod.id) {\n        this.cart.splice(index, 1);\n      }\n    });\n    this.products.next(this.cart);\n  }\n  updateQtyAndTotalPrice(item) {\n    const index = this.find(item);\n    const products = this.getCart;\n    let totalQty = products[index].qty = 1;\n    totalQty = totalQty;\n    let subTotal = products[index].price * totalQty;\n    products[index].totalprice = subTotal;\n  }\n  find(item) {\n    const products = this.getCart;\n    const index = products.findIndex(prod => {\n      return prod.id == item.id;\n    });\n    return index;\n  }\n  getTotal() {\n    const total = this.cart.reduce((r, c) => r = r + c.totalprice, 0);\n    const gstRate = 0.18;\n    this.totalAmount.next(total);\n    this.gstAmount.next(gstRate * total);\n    this.estimatedTotal.next(total + this.gstAmount.value);\n    return total;\n  }\n  addQty(item) {\n    const products = this.getCart;\n    let index = this.find(item);\n    let totalQty = products[index].qty;\n    if (totalQty !== 12) {\n      totalQty = totalQty && totalQty + 1;\n    }\n    products[index].qty = totalQty;\n    let subTotal = products[index].price * totalQty;\n    products[index].totalprice = subTotal;\n  }\n  lessQty(item) {\n    const products = this.getCart;\n    let index = this.find(item);\n    let totalQty = products[index].qty;\n    if (totalQty !== 1) {\n      totalQty = totalQty && totalQty - 1;\n    }\n    products[index].qty = totalQty;\n    let subTotal = products[index].price * totalQty;\n    products[index].totalprice = subTotal;\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","cart","products","totalAmount","gstAmount","estimatedTotal","getCart","add","product","push","updateQtyAndTotalPrice","next","remove","map","prod","index","id","splice","item","find","totalQty","qty","subTotal","price","totalprice","findIndex","getTotal","total","reduce","r","c","gstRate","value","addQty","lessQty","factory","ɵfac","providedIn"],"sources":["D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\core\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from 'src/app/modules/product/model';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private cart:Product[]=[];\n  private products=new BehaviorSubject<Product[]>([]);\n  public totalAmount=new BehaviorSubject<number>(0);\n  public gstAmount=new BehaviorSubject<number>(0);\n  public estimatedTotal=new BehaviorSubject<number>(0);\n  constructor() {\n   }\n  public get getCart(){\n    return this.cart;\n  }\n  public add(product:Product){\n    this.cart.push(product);\n    this.updateQtyAndTotalPrice(product);\n    this.products.next(this.cart);\n  }\n  public remove(product:Product){\n    this.cart.map((prod:Product, index:number)=>{\n      if(product.id=== prod.id){\n        this.cart.splice(index,1);\n      }\n    })\n    this.products.next(this.cart);\n  }\n\n  updateQtyAndTotalPrice(item:Product){\n    const index=this.find(item);\n    const products=this.getCart;\n    let totalQty=products[index].qty=1;\n    totalQty=totalQty;\n    let subTotal=products[index].price*totalQty;\n    products[index].totalprice=subTotal;\n  }\n  find(item:Product):number{\n    const products=this.getCart;\n    const index= products.findIndex((prod)=>{ \n      return prod.id==item.id;\n    })\n    return index;\n  }\n  getTotal():number{\n    const total=this.cart.reduce((r:any,c:any)=>r=r+c.totalprice,0);\n    const gstRate=0.18;\n    this.totalAmount.next(total);\n    this.gstAmount.next(gstRate*total);\n    this.estimatedTotal.next(total+this.gstAmount.value);\n    return total;\n  }\n  addQty(item:Product){\n    const products=this.getCart;\n    let index=this.find(item);\n    let totalQty=products[index].qty;\n    if(totalQty!==12){\n      totalQty=totalQty&&totalQty+1;\n    }\n    products[index].qty=totalQty;\n    let subTotal=products[index].price*totalQty!;\n    products[index].totalprice=subTotal;\n\n  }\n  lessQty(item:Product){\n    const products=this.getCart;\n    let index=this.find(item);\n    let totalQty=products[index].qty;\n    if(totalQty!==1){\n      totalQty=totalQty&&totalQty-1;\n    }\n    products[index].qty=totalQty;\n    let subTotal=products[index].price*totalQty!;\n    products[index].totalprice=subTotal;\n  }\n  \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}