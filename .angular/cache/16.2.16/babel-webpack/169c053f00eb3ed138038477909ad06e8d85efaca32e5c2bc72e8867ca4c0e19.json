{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/shared/services/auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/register\"];\n};\nexport class LoginComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.isLogin = false;\n    this.loginForm = this.formBuilder.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.min(6), Validators.max(16)])\n    });\n  }\n  onSubmit() {\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n    if (email == 'davidpaul@test.com' && password == 'david12345') {\n      this.authService.login();\n    } else alert('Invalid input');\n    this.loginForm.reset();\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 3,\n      consts: [[1, \"mt-5\", \"p-3\", \"max-w-[430px]\", \"min-w-[380px]\", \"mx-auto\", \"bg-white\", \"shadow-lg\", \"rounded-lg\"], [1, \"py-4\", \"text-gray-700\", \"text-xl\", \"text-center\", \"font-semibold\", \"border-b\"], [1, \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-6\"], [\"for\", \"email\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"davidpaul@test.com\", \"required\", \"\", 1, \"shadow-sm\", \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"focus:ring-gray-500\", \"focus:border-gray-500\", \"block\", \"w-full\", \"p-2.5\", \"outline-none\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-gray-500\", \"focus:border-2\", \"dark:focus:border-gray-500\", \"dark:shadow-sm-light\"], [\"for\", \"password\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"shadow-sm\", \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"focus:ring-gray-500\", \"focus:border-gray-500\", \"block\", \"w-full\", \"p-2.5\", \"outline-none\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-gray-500\", \"focus:border-2\", \"dark:focus:border-gray-500\", \"dark:shadow-sm-light\"], [1, \"flex\", \"justify-between\", \"items-start\", \"mb-6\"], [\"href\", \"#\", 1, \"text-sm\", \"font-medium\", \"text-gray-600\", \"hover:underline\", \"dark:text-gray-500\"], [\"type\", \"submit\", 1, \"text-white\", \"bg-[#3c64a9]\", \"hover:bg-[#3c64a9]\", \"focus:ring-4\", \"focus:outline-none\", \"focus:ring-[#3c64a9]-300\", \"font-medium\", \"text-sm\", \"px-5\", \"py-3\", \"text-center\", \"dark:bg-gray-600\", \"dark:hover:bg-gray-700\", \"dark:focus:ring-gray-800\", \"w-full\"], [1, \"mt-4\", \"text-sm\"], [1, \"text-gray-600\", \"hover:underline\", \"dark:text-gray-500\", 3, \"routerLink\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 9)(14, \"a\", 10);\n          i0.ɵɵtext(15, \"Forgot password?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 11);\n          i0.ɵɵtext(17, \"Login \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"p\", 12);\n          i0.ɵɵtext(19, \" Not a member? \");\n          i0.ɵɵelementStart(20, \"a\", 13);\n          i0.ɵɵtext(21, \"Register\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["FormControl","Validators","LoginComponent","constructor","formBuilder","authService","isLogin","loginForm","group","email","required","password","min","max","onSubmit","value","login","alert","reset","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\core\\components\\login\\login.component.ts","D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\core\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup,FormBuilder,FormControl,Validators} from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\n\nexport class LoginComponent {\n  isLogin=false;\n  loginForm!:FormGroup;\n  constructor(private formBuilder:FormBuilder, private authService:AuthService){\n    this.loginForm=this.formBuilder.group({\n      email:new FormControl('',[Validators.required,Validators.email]),\n      password:new FormControl('',[Validators.required,Validators.min(6),Validators.max(16)])\n    })\n  \n  }\n\n\n  onSubmit(){\n    const email=this.loginForm.value.email;\n    const password=this.loginForm.value.password;\n    if(email=='davidpaul@test.com'&&password=='david12345'){\n      this.authService.login();\n    } else alert('Invalid input');\n    this.loginForm.reset();\n  }\n}\n","\n<div class=\"mt-5 p-3 max-w-[430px] min-w-[380px] mx-auto bg-white shadow-lg rounded-lg\">\n    <h4 class=\"py-4 text-gray-700 text-xl text-center font-semibold border-b\">Login</h4>\n    <div class=\"mt-5\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-6\">\n                <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Email</label>\n                <input \n                type=\"email\" \n                id=\"email\" \n                formControlName=\"email\"\n                class=\"shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 focus:border-2 dark:focus:border-gray-500 dark:shadow-sm-light\" placeholder=\"davidpaul@test.com\" required>\n              </div>\n              <div class=\"mb-6\">\n                <label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Password</label>\n                <input \n                type=\"password\" \n                id=\"password\" \n                formControlName=\"password\"\n                class=\"shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 focus:border-2 dark:focus:border-gray-500 dark:shadow-sm-light\" required>\n              </div>\n            \n            <div class=\"flex justify-between items-start mb-6\">\n              <!-- <div class=\"flex items-center h-5\">\n                <input id=\"terms\" type=\"checkbox\" value=\"\" class=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-gray-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-gray-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800\" required>\n                <label for=\"terms\" class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Remember password</label>\n              </div> -->\n              <a href=\"#\" class=\"text-sm font-medium text-gray-600 hover:underline dark:text-gray-500\">Forgot password?</a>\n            </div>\n            <button type=\"submit\" class=\"text-white bg-[#3c64a9] hover:bg-[#3c64a9] focus:ring-4 focus:outline-none focus:ring-[#3c64a9]-300 font-medium text-sm px-5 py-3 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800 w-full\">Login </button>\n            <p class=\"mt-4 text-sm\">\n                Not a member?\n                <a [routerLink]=\"['/register']\" class=\"text-gray-600 hover:underline dark:text-gray-500\">Register</a>\n            </p>\n          </form>\n    </div>\n\n</div>\n  \n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}