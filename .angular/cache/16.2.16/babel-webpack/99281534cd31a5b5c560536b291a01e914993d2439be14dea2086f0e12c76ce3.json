{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport { catchError, map, throwError } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.baseAPIURL + 'products';\n    this.products = new BehaviorSubject([]);\n    this.ratingList = [];\n  }\n  get get() {\n    return this.http.get(this.url).pipe(map(data => {\n      let newProducts = [];\n      for (const key in data) {\n        newProducts.push({\n          ...data[key]\n        });\n      }\n      return newProducts;\n    }), catchError(error => {\n      return throwError(error); //throwError is deprecated\n      // return new Error(error);\n    }));\n  }\n  getByCategory(category) {\n    return this.http.get(this.url, {\n      params: new HttpParams().set('category', category)\n    });\n  }\n  getRelated(type) {\n    return this.http.get(this.url, {\n      params: new HttpParams().set('type', type)\n    });\n  }\n  getProduct(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n  search(query) {\n    return this.http.get(this.url, {\n      params: new HttpParams().set('q', query)\n    });\n  }\n  getRatingStar(product) {\n    this.ratingList = [];\n    [...Array(5)].map((_, index) => {\n      return index + 1 <= Math.trunc(product?.rating.rate) ? this.ratingList.push(true) : this.ratingList.push(false);\n    });\n    return this.ratingList;\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","HttpParams","catchError","map","throwError","BehaviorSubject","ProductService","constructor","http","url","baseAPIURL","products","ratingList","get","pipe","data","newProducts","key","push","error","getByCategory","category","params","set","getRelated","type","getProduct","id","search","query","getRatingStar","product","Array","_","index","Math","trunc","rating","rate","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\modules\\product\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable, catchError, map, throwError} from 'rxjs';\nimport { Product} from '../model';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProductService {\n  private url=environment.baseAPIURL+'products';\n  products=new BehaviorSubject<Product[]>([]);\n  ratingList:boolean[]=[];\n  constructor(private http:HttpClient) { }\n\n  get get():Observable<Product[]|any>{\n    return this.http.get<{[key:string]:Product}>(this.url).pipe(map((data)=>{\n      let newProducts:Product[]=[];\n      for(const key in data){\n        newProducts.push({...data[key]})\n      }\n      return newProducts;\n    }),\n    catchError((error)=>{\n      return throwError(error); //throwError is deprecated\n      // return new Error(error);\n    }));\n  }\n  getByCategory(category:string):Observable<Product[]|any>{\n    return this.http.get(this.url,{\n      params:new HttpParams().set('category',category)\n    });\n  }\n  getRelated(type:string):Observable<Product[]|any>{\n    return this.http.get(this.url,{\n      params:new HttpParams().set('type',type)\n    });\n  }\n  getProduct(id:number):Observable<Product>{\n    return this.http.get<Product>(this.url+'/'+id);\n  }\n\n  search(query:string):Observable<Product[]>{\n    return this.http.get<Product[]>(this.url,{\n      params:new HttpParams().set('q',query)\n    });\n  }\n  getRatingStar(product:Product){\n    this.ratingList=[];\n    [...Array(5)].map((_,index)=>{\n      return index+1<= Math.trunc(product?.rating.rate)?this.ratingList.push(true):this.ratingList.push(false);\n    });\n    return this.ratingList;\n  }\n  \n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAoBC,UAAU,QAAO,sBAAsB;AAC3D,SAAoBC,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAO,MAAM;AAE5D,SAASC,eAAe,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,GAAG,GAACT,WAAW,CAACU,UAAU,GAAC,UAAU;IAC7C,KAAAC,QAAQ,GAAC,IAAIN,eAAe,CAAY,EAAE,CAAC;IAC3C,KAAAO,UAAU,GAAW,EAAE;EACgB;EAEvC,IAAIC,GAAGA,CAAA;IACL,OAAO,IAAI,CAACL,IAAI,CAACK,GAAG,CAAyB,IAAI,CAACJ,GAAG,CAAC,CAACK,IAAI,CAACX,GAAG,CAAEY,IAAI,IAAG;MACtE,IAAIC,WAAW,GAAW,EAAE;MAC5B,KAAI,MAAMC,GAAG,IAAIF,IAAI,EAAC;QACpBC,WAAW,CAACE,IAAI,CAAC;UAAC,GAAGH,IAAI,CAACE,GAAG;QAAC,CAAC,CAAC;;MAElC,OAAOD,WAAW;IACpB,CAAC,CAAC,EACFd,UAAU,CAAEiB,KAAK,IAAG;MAClB,OAAOf,UAAU,CAACe,KAAK,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,CAAC;EACL;EACAC,aAAaA,CAACC,QAAe;IAC3B,OAAO,IAAI,CAACb,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,GAAG,EAAC;MAC5Ba,MAAM,EAAC,IAAIrB,UAAU,EAAE,CAACsB,GAAG,CAAC,UAAU,EAACF,QAAQ;KAChD,CAAC;EACJ;EACAG,UAAUA,CAACC,IAAW;IACpB,OAAO,IAAI,CAACjB,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,GAAG,EAAC;MAC5Ba,MAAM,EAAC,IAAIrB,UAAU,EAAE,CAACsB,GAAG,CAAC,MAAM,EAACE,IAAI;KACxC,CAAC;EACJ;EACAC,UAAUA,CAACC,EAAS;IAClB,OAAO,IAAI,CAACnB,IAAI,CAACK,GAAG,CAAU,IAAI,CAACJ,GAAG,GAAC,GAAG,GAACkB,EAAE,CAAC;EAChD;EAEAC,MAAMA,CAACC,KAAY;IACjB,OAAO,IAAI,CAACrB,IAAI,CAACK,GAAG,CAAY,IAAI,CAACJ,GAAG,EAAC;MACvCa,MAAM,EAAC,IAAIrB,UAAU,EAAE,CAACsB,GAAG,CAAC,GAAG,EAACM,KAAK;KACtC,CAAC;EACJ;EACAC,aAAaA,CAACC,OAAe;IAC3B,IAAI,CAACnB,UAAU,GAAC,EAAE;IAClB,CAAC,GAAGoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC7B,GAAG,CAAC,CAAC8B,CAAC,EAACC,KAAK,KAAG;MAC3B,OAAOA,KAAK,GAAC,CAAC,IAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,EAAEM,MAAM,CAACC,IAAI,CAAC,GAAC,IAAI,CAAC1B,UAAU,CAACM,IAAI,CAAC,IAAI,CAAC,GAAC,IAAI,CAACN,UAAU,CAACM,IAAI,CAAC,KAAK,CAAC;IAC1G,CAAC,CAAC;IACF,OAAO,IAAI,CAACN,UAAU;EACxB;;;uBA5CWN,cAAc,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdpC,cAAc;MAAAqC,OAAA,EAAdrC,cAAc,CAAAsC,IAAA;MAAAC,UAAA,EAHb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}