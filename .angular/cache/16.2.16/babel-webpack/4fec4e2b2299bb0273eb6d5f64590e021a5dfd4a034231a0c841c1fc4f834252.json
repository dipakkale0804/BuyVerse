{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n  }\n  login() {\n    this.router.navigate(['/']);\n    localStorage.setItem('isLogged', 'true');\n  }\n  logout() {\n    this.router.navigate(['/']);\n    localStorage.removeItem('isLogged');\n  }\n  isLoggedIn() {\n    return localStorage.getItem('isLogged');\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","router","login","navigate","localStorage","setItem","logout","removeItem","isLoggedIn","getItem","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\shared\\services\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private router:Router) { }\n  login(){\n    this.router.navigate(['/']);\n    localStorage.setItem('isLogged','true');\n  }\n  logout(){\n    this.router.navigate(['/']);\n    localStorage.removeItem('isLogged');\n  }\n  isLoggedIn(){\n    return localStorage.getItem('isLogged');\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;EAAW;EACrCC,KAAKA,CAAA;IACH,IAAI,CAACD,MAAM,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAC,MAAM,CAAC;EACzC;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACL,MAAM,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3BC,YAAY,CAACG,UAAU,CAAC,UAAU,CAAC;EACrC;EACAC,UAAUA,CAAA;IACR,OAAOJ,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC;EACzC;;;uBAZWV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAXd,WAAW;MAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}