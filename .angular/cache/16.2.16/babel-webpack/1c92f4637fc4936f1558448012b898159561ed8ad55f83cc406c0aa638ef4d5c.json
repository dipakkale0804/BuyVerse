{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthinterceptorService {\n  intercept(req, next) {\n    const token = 'y2h3428sfjaqwrpfs3tx44gfskqpjmnvr8';\n    const request = req.clone({\n      headers: req.headers.append('Auth', token)\n    });\n    return next.handle(request);\n  }\n  static {\n    this.ɵfac = function AuthinterceptorService_Factory(t) {\n      return new (t || AuthinterceptorService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthinterceptorService,\n      factory: AuthinterceptorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthinterceptorService","intercept","req","next","token","request","clone","headers","append","handle","factory","ɵfac","providedIn"],"sources":["D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\shared\\services\\auth\\authinterceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthinterceptorService implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token='y2h3428sfjaqwrpfs3tx44gfskqpjmnvr8';\n    const request=req.clone({headers:req.headers.append('Auth',token)})\n    return next.handle(request);\n  }\n}\n"],"mappings":";AAQA,OAAM,MAAOA,sBAAsB;EACjCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAC,oCAAoC;IAChD,MAAMC,OAAO,GAACH,GAAG,CAACI,KAAK,CAAC;MAACC,OAAO,EAACL,GAAG,CAACK,OAAO,CAACC,MAAM,CAAC,MAAM,EAACJ,KAAK;IAAC,CAAC,CAAC;IACnE,OAAOD,IAAI,CAACM,MAAM,CAACJ,OAAO,CAAC;EAC7B;;;uBALWL,sBAAsB;IAAA;EAAA;;;aAAtBA,sBAAsB;MAAAU,OAAA,EAAtBV,sBAAsB,CAAAW,IAAA;MAAAC,UAAA,EAHrB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}