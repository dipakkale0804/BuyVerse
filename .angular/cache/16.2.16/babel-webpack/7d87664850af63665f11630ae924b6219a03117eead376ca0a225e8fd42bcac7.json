{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return [a0];\n};\nfunction BreadcrumbComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 8);\n    i0.ɵɵelement(3, \"path\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const breadrumb_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, \"/\" + breadrumb_r1.path));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", breadrumb_r1.label, \" \");\n  }\n}\nexport class BreadcrumbComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.breadcrumbList = [];\n  }\n  listenRoute() {\n    this.router.events.subscribe(router => {\n      let url = router.url;\n      console.log('url', router.routerEvent);\n    });\n    console.log('dsd', this.route.url);\n    this.route.url.subscribe(url => {\n      console.log('data', url);\n      url.map(path => {\n        this.breadcrumbList.push({\n          path: path.path,\n          label: path.path.charAt(0).toUpperCase() + path.path.slice(1)\n        });\n      });\n    });\n  }\n  ngOnInit() {\n    // this.route.pathFromRoot;\n    // this.listenRoute();\n    // console.log('breadcrumbslist',this.breadcrumbList);\n  }\n  static {\n    this.ɵfac = function BreadcrumbComponent_Factory(t) {\n      return new (t || BreadcrumbComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BreadcrumbComponent,\n      selectors: [[\"app-breadcrumb\"]],\n      decls: 8,\n      vars: 1,\n      consts: [[\"aria-label\", \"Breadcrumb\", 1, \"flex\", \"mb-4\"], [1, \"inline-flex\", \"items-center\", \"space-x-1\", \"md:space-x-3\"], [1, \"inline-flex\", \"items-center\"], [\"href\", \"#\", 1, \"inline-flex\", \"items-center\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"hover:text-blue-600\", \"dark:text-gray-400\", \"dark:hover:text-white\"], [\"aria-hidden\", \"true\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 20 20\", 1, \"w-3\", \"h-3\", \"mr-2.5\"], [\"d\", \"m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\"], [\"aria-hidden\", \"true\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 6 10\", 1, \"w-3\", \"h-3\", \"text-gray-400\", \"mx-1\"], [\"stroke\", \"currentColor\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"m1 9 4-4-4-4\"], [1, \"ml-1\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"hover:text-blue-600\", \"md:ml-2\", \"dark:text-gray-400\", \"dark:hover:text-white\", 3, \"routerLink\"]],\n      template: function BreadcrumbComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ol\", 1)(2, \"li\", 2)(3, \"a\", 3);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(4, \"svg\", 4);\n          i0.ɵɵelement(5, \"path\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(6, \" Home \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, BreadcrumbComponent_li_7_Template, 6, 4, \"li\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.breadcrumbList);\n        }\n      },\n      dependencies: [i2.NgForOf, i1.RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵnamespaceHTML","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","breadrumb_r1","path","ɵɵtextInterpolate1","label","BreadcrumbComponent","constructor","router","route","breadcrumbList","listenRoute","events","subscribe","url","console","log","routerEvent","map","push","charAt","toUpperCase","slice","ngOnInit","ɵɵdirectiveInject","i1","Router","ActivatedRoute","selectors","decls","vars","consts","template","BreadcrumbComponent_Template","rf","ctx","ɵɵtemplate","BreadcrumbComponent_li_7_Template"],"sources":["D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\core\\components\\breadcrumb\\breadcrumb.component.ts","D:\\Projects All\\Angular\\ng-ecommerce-master\\src\\app\\core\\components\\breadcrumb\\breadcrumb.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSegment} from '@angular/router';\n\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styles: [\n  ]\n})\n\nexport class BreadcrumbComponent implements OnInit{\n  breadcrumbList:{path:string;label:string}[]=[];\n  constructor(private router:Router,private route:ActivatedRoute){}\n\n\n  listenRoute(){\n    this.router.events.subscribe((router:any)=>{\n      let url=router.url;\n      console.log('url',router.routerEvent)\n    })\n    console.log('dsd',this.route.url);\n    this.route.url.subscribe((url:UrlSegment[])=>{\n      console.log('data',url);\n      url.map((path:any)=>{\n        this.breadcrumbList.push({\n          path:path.path,\n          label:path.path.charAt(0).toUpperCase()+path.path.slice(1)\n        });\n      })\n    })\n  }\n\n  ngOnInit(): void {\n  // this.route.pathFromRoot;\n  // this.listenRoute();\n  // console.log('breadcrumbslist',this.breadcrumbList);\n\n  }\n}\n","<nav class=\"flex mb-4\" aria-label=\"Breadcrumb\">\n    <ol class=\"inline-flex items-center space-x-1 md:space-x-3\">\n    <li class=\"inline-flex items-center\">\n        <a href=\"#\" class=\"inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white\">\n        <svg class=\"w-3 h-3 mr-2.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path d=\"m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z\"/>\n        </svg>\n        Home\n        </a>\n    </li>\n    <li *ngFor=\"let breadrumb of breadcrumbList\">\n        <div class=\"flex items-center\">\n        <svg class=\"w-3 h-3 text-gray-400 mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\n            <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 9 4-4-4-4\"/>\n        </svg>\n        <a [routerLink]=\"['/'+breadrumb.path]\" class=\"ml-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ml-2 dark:text-gray-400 dark:hover:text-white\">\n            {{breadrumb.label}}\n        </a>\n        </div>\n    </li>\n    <!-- <li aria-current=\"page\">\n        <div class=\"flex items-center\">\n        <svg class=\"w-3 h-3 text-gray-400 mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\n            <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 9 4-4-4-4\"/>\n        </svg>\n        <span class=\"ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400\">Flowbite</span>\n        </div>\n    </li> -->\n    </ol>\n  </nav>"],"mappings":";;;;;;;;;ICUIA,EAAA,CAAAC,eAAA,EAA6C;IAA7CD,EAAA,CAAAE,cAAA,SAA6C;IAEzCF,EAAA,CAAAG,cAAA,EAA6H;IAA7HH,EAAA,CAAAE,cAAA,aAA6H;IACzHF,EAAA,CAAAI,SAAA,cAA8G;IAClHJ,EAAA,CAAAK,YAAA,EAAM;IACNL,EAAA,CAAAC,eAAA,EAA2J;IAA3JD,EAAA,CAAAE,cAAA,YAA2J;IACvJF,EAAA,CAAAM,MAAA,GACJ;IAAAN,EAAA,CAAAK,YAAA,EAAI;;;;IAFDL,EAAA,CAAAO,SAAA,GAAmC;IAAnCP,EAAA,CAAAQ,UAAA,eAAAR,EAAA,CAAAS,eAAA,IAAAC,GAAA,QAAAC,YAAA,CAAAC,IAAA,EAAmC;IAClCZ,EAAA,CAAAO,SAAA,GACJ;IADIP,EAAA,CAAAa,kBAAA,MAAAF,YAAA,CAAAG,KAAA,MACJ;;;ADNR,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,MAAa,EAASC,KAAoB;IAA1C,KAAAD,MAAM,GAANA,MAAM;IAAgB,KAAAC,KAAK,GAALA,KAAK;IAD/C,KAAAC,cAAc,GAA8B,EAAE;EACkB;EAGhEC,WAAWA,CAAA;IACT,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,SAAS,CAAEL,MAAU,IAAG;MACzC,IAAIM,GAAG,GAACN,MAAM,CAACM,GAAG;MAClBC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACR,MAAM,CAACS,WAAW,CAAC;IACvC,CAAC,CAAC;IACFF,OAAO,CAACC,GAAG,CAAC,KAAK,EAAC,IAAI,CAACP,KAAK,CAACK,GAAG,CAAC;IACjC,IAAI,CAACL,KAAK,CAACK,GAAG,CAACD,SAAS,CAAEC,GAAgB,IAAG;MAC3CC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,GAAG,CAAC;MACvBA,GAAG,CAACI,GAAG,CAAEf,IAAQ,IAAG;QAClB,IAAI,CAACO,cAAc,CAACS,IAAI,CAAC;UACvBhB,IAAI,EAACA,IAAI,CAACA,IAAI;UACdE,KAAK,EAACF,IAAI,CAACA,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAClB,IAAI,CAACA,IAAI,CAACmB,KAAK,CAAC,CAAC;SAC1D,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACR;IACA;IACA;EAAA;;;uBAzBWjB,mBAAmB,EAAAf,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAnC,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAE,cAAA;IAAA;EAAA;;;YAAnBrB,mBAAmB;MAAAsB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCXhC3C,EAAA,CAAAE,cAAA,aAA+C;UAIvCF,EAAA,CAAAG,cAAA,EAA0H;UAA1HH,EAAA,CAAAE,cAAA,aAA0H;UACtHF,EAAA,CAAAI,SAAA,cAAoO;UACxOJ,EAAA,CAAAK,YAAA,EAAM;UACNL,EAAA,CAAAM,MAAA,aACA;UAAAN,EAAA,CAAAK,YAAA,EAAI;UAERL,EAAA,CAAA6C,UAAA,IAAAC,iCAAA,gBASK;UASL9C,EAAA,CAAAK,YAAA,EAAK;;;UAlBqBL,EAAA,CAAAO,SAAA,GAAiB;UAAjBP,EAAA,CAAAQ,UAAA,YAAAoC,GAAA,CAAAzB,cAAA,CAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}